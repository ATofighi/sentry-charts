apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "sentry.fullname" . }}-sessions-consumer
  labels:
    app: {{ template "sentry.fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
    app.kubernetes.io/managed-by: "Helm"
  {{- if .Values.asHook }}
  {{- /* Add the Helm annotations so that deployment after asHook from true to false works */}}
  annotations:
    meta.helm.sh/release-name: "{{ .Release.Name }}"
    meta.helm.sh/release-namespace: "{{ .Release.Namespace }}"
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "16"
  {{- end }}
spec:
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: sessions-consumer
  replicas: {{ .Values.snuba.sessionsConsumer.replicas }}
  template:
    metadata:
      annotations:
        checksum/snubaSettingsPy: {{ .Values.config.snubaSettingsPy | sha256sum }}
        checksum/config.yaml: {{ include (print $.Template.BasePath "/configmap-snuba.yaml") . | sha256sum }}
        {{- if .Values.snuba.sessionsConsumer.annotations }}
{{ toYaml .Values.snuba.sessionsConsumer.annotations | indent 8 }}
        {{- end }}
      labels:
        app: {{ template "sentry.fullname" . }}
        release: "{{ .Release.Name }}"
        role: sessions-consumer
        {{- if .Values.snuba.sessionsConsumer.podLabels }}
{{ toYaml .Values.snuba.sessionsConsumer.podLabels | indent 8 }}
        {{- end }}
    spec:
      affinity:
      {{- if .Values.snuba.sessionsConsumer.affinity }}
{{ toYaml .Values.snuba.sessionsConsumer.affinity | indent 8 }}
      {{- end }}
      {{- if .Values.snuba.sessionsConsumer.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.snuba.sessionsConsumer.nodeSelector | indent 8 }}
      {{- end }}
      {{- if .Values.snuba.sessionsConsumer.tolerations }}
      tolerations:
{{ toYaml .Values.snuba.sessionsConsumer.tolerations | indent 8 }}
      {{- end }}
      {{- if .Values.images.snuba.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.images.snuba.imagePullSecrets | indent 8 }}
      {{- end }}
      containers:
      - name: {{ .Chart.Name }}-snuba
        image: "{{ template "snuba.image" . }}"
        imagePullPolicy: {{ default "IfNotPresent" .Values.images.snuba.pullPolicy }}
        args:
        - consumer
        - --storage
        - sessions_raw
        - --auto-offset-reset=latest
        - --max-batch-time-ms
        - "750"
        {{- if and (not .Values.kafka.enabled) .Values.externalKafka.topics }}
        {{- with .Values.externalKafka.topics }}
        - --raw-events-topic
        - {{ .ingestSessions | quote }}
        - --replacements-topic
        - {{ .replacement | quote }}
        - --commit-log-topic
        - {{ .commitLog | quote }}
        {{- end }}
        - --consumer-group
        - {{ .Values.externalKafka.consumerGroups.commitLog | quote }}
        {{- end }}
        - --log-level
        - {{ .Values.snuba.logging.level }}
        ports:
        - containerPort: {{ template "snuba.port" }}
        env:
        - name: SNUBA_SETTINGS
          value: docker
        - name: SENTRY_EVENT_RETENTION_DAYS
          value: {{ .Values.sentry.eventRetentionDays | quote }}
        - name: CLICKHOUSE_SINGLE_NODE
          value: {{ if .Values.externalClickhouse.clusterName }}"false"{{ else }}"true"{{end}}
        {{- if .Values.metrics.enabled }}
        - name: DOGSTATSD_HOST
          value: "{{ template "sentry.fullname" . }}-metrics"
        - name: DOGSTATSD_PORT
          value: "9125"
        {{- end}}
        - name: DEFAULT_BROKERS
          value: {{ include "sentry.kafka.bootstrappers" . | quote }}
        - name: SENTRY_DSN
          value: {{ .Values.snuba.sentryDsn | quote }}
        - name: CLICKHOUSE_HOST
          value: {{ include "sentry.clickhouse.host" . | quote }}
        - name: REDIS_HOST
          value: {{ include "sentry.redis.host" . | quote }}
        - name: REDIS_PORT
          value: {{ include "sentry.redis.port" . | quote }}
{{- if .Values.snuba.sessionsConsumer.env }}
{{ toYaml .Values.snuba.sessionsConsumer.env | indent 8 }}
{{- end }}
        envFrom:
        - secretRef:
            name: {{ template "sentry.fullname" . }}-snuba-env
        volumeMounts:
        - mountPath: /etc/snuba
          name: config
          readOnly: true
        resources:
{{ toYaml .Values.snuba.sessionsConsumer.resources | indent 10 }}
      volumes:
        - name: config
          configMap:
            name: {{ template "sentry.fullname" . }}-snuba
